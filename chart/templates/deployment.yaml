apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: crd-scenarios
    app.kubernetes.io/part-of: crd-scenarios
  {{- include "chart.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: crd-scenarios
    app.kubernetes.io/part-of: crd-scenarios
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.controllerManager.kubeRbacProxy.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.kubeRbacProxy.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        name: manager
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.controllerManager.manager.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
        {{- if .Values.controllerManager.manager.livenessProbe }}
        livenessProbe: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.livenessProbe "context" $) | nindent 10 }}
         {{- else }}
        livenessProbe:
         httpGet:
           path: /healthz
           port: 8081
         initialDelaySeconds: 15
         periodSeconds: 20
        {{- end }}
        {{- if .Values.controllerManager.manager.readinessProbe }}
        readinessProbe: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.readinessProbe "context" $) | nindent 10 }}
         {{- else }}
        readinessProbe:
         httpGet:
           path: /readyz
           port: 8081
         initialDelaySeconds: 5
         periodSeconds: 10
        {{- end }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
{{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector: {{- include "tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations: {{- include "tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
{{- end }}
